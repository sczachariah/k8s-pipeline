@Library('fmwk8s-pipeline-library-dev') _


import com.oracle.fmwk8s.common.Common
import com.oracle.fmwk8s.common.EnvironmentSetup
import com.oracle.fmwk8s.common.Initializer
import com.oracle.fmwk8s.common.Validation
import com.oracle.fmwk8s.env.Database
import com.oracle.fmwk8s.env.Domain
import com.oracle.fmwk8s.env.IngressController
import com.oracle.fmwk8s.env.Logging
import com.oracle.fmwk8s.env.Operator

pipeline {
    agent {
        kubernetes {
            cloud "${CLOUD}"
            label 'fmwk8s-slave'
            namespace 'fmwk8s'
            yamlFile 'framework/podtemplate/fmwk8s-slave.yaml'
        }
    }

    environment {
        REGISTRY_AUTH = credentials("sandeep.zachariah.docker")
    }

    stages {
        stage('initialize validation framework') {
            steps {
                container('jnlp') {
                    script {
                        currentBuild.displayName = this.env.BUILD_NUMBER + "-" + this.env.OPERATOR_VERSION + "-" + this.env.PRODUCT_NAME + "-" + "${this.env.DOMAIN_TYPE}".toString().toUpperCase()
                        Initializer.initialize(this)
                    }
                }
            }
        }

        stage('validate input parameters') {
            steps {
                container('jnlp') {
                    script {
                        Validation.validateInputs()
                        sleep 1
                    }
                }
            }
        }

        stage('deploy kubernetes operator') {
            steps {
                container('jnlp') {
                    dir('weblogic-operator') {
                        script {
                            Operator.deployOperator()
                        }
                    }
                }

                container('jnlp') {
                    script {
                        Domain.createNamespace()
                        Common.configureRegistrySecret("${REGISTRY_AUTH_USR}", "${REGISTRY_AUTH_PSW}")
                        EnvironmentSetup.createNfsFolder()
                    }
                }
            }
        }

        stage('prepare fmw product environment') {
            parallel {
                stage('setup database') {
                    steps {
                        container('jnlp') {
                            dir('fmwk8s') {
                                script {
                                    Database.deployDatabase()
                                    Domain.preparRcu()
                                }
                            }
                        }
                    }
                }
                stage('prepare fmw domain in pv') {
                    steps {
                        container('jnlp') {
                            dir('fmwsamples') {
                                script {
                                    Domain.pullSampleScripts(this)

                                    Operator.setDomainNamespace(this, "${OPERATOR_HELM_RELEASE}", "${DOMAIN_NS}")
                                    Domain.configureDomainSecret(this, "${DOMAIN_NAME}", "${DOMAIN_NS}")
                                    Domain.configureRcuSecret(this, "${DOMAIN_NAME}", "${DOMAIN_NS}")
                                    Domain.preparePersistentVolume(this, "${DOMAIN_NAME}", "${DOMAIN_NS}", "${NFS_DOMAIN_PATH}")
                                    Domain.prepareDomain(this, "${PRODUCT_IMAGE_TAG}", "${DOMAIN_TYPE}", "${DOMAIN_NAME}", "${DOMAIN_NS}")
                                }
                            }
                        }
                    }

                }
            }
        }
    }

    post {
        always {
            container(name: 'jnlp') {
                script {
                    Logging.getLogs(this)

                    Operator.cleanOperator this, "${OPERATOR_HELM_RELEASE}"

                    IngressController.undeployLoadBalancer this, "${LB_HELM_RELEASE}"
                    Domain.cleanDomain this, "${DOMAIN_NAME}", "${DOMAIN_NS}"
                    EnvironmentSetup.deleteNfsFolder(this, "${DOMAIN_NS}", "${FMWK8S_NFS_HOME}", "${NFS_DOMAIN_DIR}")
                    Domain.cleanDomainNamespace this, "${DOMAIN_NS}"

                    Operator.cleanOperator this, "${OPERATOR_HELM_RELEASE}"
                    Operator.cleanOperatorNamespace this, "${OPERATOR_NS}"
                }
            }
        }
    }
}
