@Library('fmwk8s-pipeline-library-dev') _


import com.oracle.fmwk8s.common.Common
import com.oracle.fmwk8s.common.EnvironmentSetup
import com.oracle.fmwk8s.common.Initializer
import com.oracle.fmwk8s.common.Validation
import com.oracle.fmwk8s.env.*
import com.oracle.fmwk8s.test.Test

pipeline {
    agent {
        kubernetes {
            cloud "${CLOUD}"
            namespace 'fmwk8s'
            yamlFile 'framework/podtemplate/fmwk8s-slave.yaml'
        }
    }

    environment {
        REGISTRY_AUTH = credentials("sandeep.zachariah.docker")
    }

    stages {
        stage('initialize validation framework') {
            steps {
                container('jnlp') {
                    script {
                        currentBuild.displayName = this.env.BUILD_NUMBER + "-" + this.env.OPERATOR_VERSION + "-" + this.env.PRODUCT_NAME + "-" + "${this.env.DOMAIN_TYPE}".toString().toUpperCase()
                        Initializer.initialize(this)
                    }
                }
            }
        }

        stage('validate input parameters') {
            steps {
                container('jnlp') {
                    script {
                        Validation.validateInputs()
                        sleep 1
                    }
                }
            }
        }

        stage('deploy kubernetes operator') {
            steps {
                container('jnlp') {
                    dir('weblogic-operator') {
                        script {
                            Operator.deployOperator()
                        }
                    }
                }

                container('jnlp') {
                    script {
                        Domain.createNamespace()
                        Common.configureRegistrySecret()
                        EnvironmentSetup.createNfsFolder()
                    }
                }
            }
        }

        stage('prepare fmw product environment') {
            parallel {
                stage('setup database') {
                    steps {
                        container('jnlp') {
                            dir('fmwk8s') {
                                script {
                                    Database.deployDatabase()
                                    Domain.preparRcu()
                                }
                            }
                        }
                    }
                }
                stage('prepare fmw domain in pv') {
                    steps {
                        container('jnlp') {
                            dir('fmwsamples') {
                                script {
                                    Domain.pullSampleScripts()

                                    Operator.setDomainNamespace()
                                    Domain.configureDomainSecret()
                                    Domain.configureRcuSecret()
                                    Domain.preparePersistentVolume()
                                    Domain.prepareDomain()
                                }
                            }
                        }
                    }

                }
            }
        }

        stage('deploy fmw domain') {
            parallel {
                stage('create fmw domain') {
                    steps {
                        container('jnlp') {
                            dir('fmwsamples') {
                                script {
                                    Domain.createDomain()
                                    Logging.deployLogstash()
                                }
                            }
                        }
                    }
                }
                stage('configure domain loadbalancer') {
                    steps {
                        container('jnlp') {
                            dir('fmwsamples') {
                                script {
                                    IngressController.deployLoadBalancer()
                                }
                            }
                            dir('fmwk8s') {
                                script {
                                    Domain.configureDomainLoadBalancer()
                                }
                            }
                        }
                    }
                }
            }
        }

        stage('verify domain ready') {
            steps {
                container('jnlp') {
                    sh label: 'verify weblogic ready', script: '''
                            echo "TODO WEBLOGIC READY"
                            '''
                }
            }
        }

        stage('run tests') {
            parallel {
                stage('wait for completion') {
                    steps {
                        container('jnlp') {
                            script {
                                EnvironmentSetup.waitHoursAfter()
                            }
                        }
                    }
                }

                stage('execute tests') {
                    steps {
                        container('jnlp') {
                            script {
                                Test.invokeTest()
                            }
                        }
                    }
                }
            }
        }

        stage('publish results') {
            steps {
                container('jnlp') {
                    script {
                        Common.publishLogs()
                    }
                }
            }
        }
    }

    post {
        always {
            container(name: 'jnlp') {
                script {
                    Logging.getLogs()

                    Operator.cleanOperator()

                    IngressController.undeployLoadBalancer()
                    Domain.cleanDomain()
                    EnvironmentSetup.deleteNfsFolder()
                    Domain.cleanDomainNamespace()

                    Operator.cleanOperator()
                    Operator.cleanOperatorNamespace()
                }
            }
        }
    }
}
