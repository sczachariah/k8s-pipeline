def getReportZipFile() {
    return "test-output_${BUILD_NUMBER}.zip"
}
pipeline {
    agent {
        kubernetes {
            label 'fmwk8s-test-infra-slave'
            namespace 'fmwk8s'
            inheritFrom 'fmwk8s-test-infra-slave'
        }
    }
    environment {
        KUBECONFIG = credentials('admin.fmwk8s.kubeconfig')
        REGISTRY_AUTH = credentials("sandeep.zachariah.docker")
    }
    stages {
        stage('deploy Test tools') {
            steps {
                container(name: 'jnlp') {
                    git branch: 'master',
                            credentialsId: 'jaya.selvaraj.ssh',
                            url: 'git@orahub.oraclecorp.com:fmw-platform-qa/fmw-k8s-pipeline.git'

                    sh 'kubectl apply -n fmwk8s -f kubernetes/tools/selenium/'

                    sh label: 'generate test props', script: '''
                    cat <<EOF > ${WORKSPACE}/test.props
SELENIUM_HUB_HOST=selenium-standalone-firefox.fmwk8s
SELENIUM_HUB_PORT=4444
EOF
                    cat ${WORKSPACE}/test.props
                    '''
                }
            }
        }

    }
    post {
        always {
           script {
           	  currentBuild.displayName = this.env.PRODUCT_NAME
           	  sh label: 'trigger build', script: '''
           	  curl -X POST http://"${REGISTRY_AUTH_USR}":"${REGISTRY_AUTH_PSW}"@hudsonci.oraclecorp.com/jenkins/fmw_extended_pipeline/view/FMWDocker/job/Cleanup_FMW_Instances/buildWithParameters --data-urlencode json='{"parameter": [{"name":"PRODUCT_NAME", "value":"${PRODUCT_NAME}"},{"name":"VERSION_QUALIFIER", "value":"${VERSION_QUALIFIER}"},{"name":"DOCKER_IMAGE", "value":"${DOCKER_IMAGE}"},{"name":"PRODUCT_DOMAIN_TYPE", "value":"${PRODUCT_DOMAIN_TYPE}"},{"name":"NAMESPACE", "value":"${NAMESPACE}"}]}'
           	  '''

           }


        }
    }

}
