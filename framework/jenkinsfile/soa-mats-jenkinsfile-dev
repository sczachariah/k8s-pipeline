@Library('fmwk8s-pipeline-library') _


import com.oracle.fmwk8s.common.Common
import com.oracle.fmwk8s.env.Domain
import com.oracle.fmwk8s.env.Operator

pipeline {
    agent {
        kubernetes {
            label 'fmwk8s-test-mats-slave'
            namespace 'fmwk8s'
            inheritFrom 'fmwk8s-test-mats-slave'
        }
    }

    environment {
        RUN_SUFFIX = Common.getUniqueId(this)
        KUBECONFIG = credentials('admin.fmwk8s.kubeconfig')
        SOA_OPERATOR_NS = 'soa-operator-ns' + "-${RUN_SUFFIX}"
        SOA_OPERATOR_SA = 'default'
        SOA_OPERATOR_REL = "${RUN_SUFFIX}"
        SOA_DOMAIN_NAME = 'soainfra'
        SOA_DOMAIN_NS = 'soa-domain-ns' + "-${RUN_SUFFIX}"
        WEBLOGIC_USER = 'weblogic'
        ADMIN_PASSWORD = 'Welcome1'
        FMWK8S_NFS_HOME = "/scratch/u01/DockerVolume"
        NFS_DOMAIN_DIR = "${SOA_DOMAIN_NS}"
        NFS_DOMAIN_PATH = "${FMWK8S_NFS_HOME}/${NFS_DOMAIN_DIR}"
    }


    stages {
        stage('build and deploy soa operator') {
            steps {
                log('INFO', 'Starting SOA pipeline with unique runId ' + "${RUN_SUFFIX}")

                withCredentials([[$class          : 'UsernamePasswordMultiBinding', credentialsId: 'DockerHub',
                                  usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD'],
                                 [$class          : 'UsernamePasswordMultiBinding', credentialsId: 'sandeep.zachariah.docker',
                                  usernameVariable: 'DOCKER_USERNAME_CISYSTEM', passwordVariable: 'DOCKER_PASSWORD_CISYSTEM']]) {
                    container('dind') {
                        git branch: 'master',
                                credentialsId: 'sandeep.zachariah.ssh',
                                url: 'git@orahub.oraclecorp.com:tooling/soa-kubernetes-operator.git'

                        script {
                            try {
                                sh label: 'create operator namespace', script: '''
                                export KUBECONFIG=${KUBECONFIG}
                                kubectl create ns ${SOA_OPERATOR_NS}
                                #kubectl create sa ${SOA_OPERATOR_SA} -n ${SOA_OPERATOR_NS}
                                '''
                            }
                            catch (exc) {
                            }
                        }

                        script {
                            try {
                                sh label: 'create domain namespace', script: '''
                                export KUBECONFIG=${KUBECONFIG}
                                kubectl create ns ${SOA_DOMAIN_NS}
                                '''
                            }
                            catch (exc) {
                            }
                            finally {
                                sh label: 'initialize helm', script: '''
                                export KUBECONFIG=${KUBECONFIG}
                                helm init
                                '''
                            }
                        }

                        script {
                            Operator.buildOperator this,"${DOCKER_USERNAME_CISYSTEM}","${DOCKER_PASSWORD_CISYSTEM}","${https_proxy}"
                            Operator.deployOperator this,"${SOA_OPERATOR_REL}","${SOA_DOMAIN_NS}","${SOA_OPERATOR_NS}","${SOA_OPERATOR_SA}"
                        }

                        sh label: 'verify soa operator', script: '''
						kubectl get pods -n ${SOA_OPERATOR_NS}
						#kubectl logs -n ${SOA_OPERATOR_NS} -c weblogic-operator deployments/weblogic-operator
						'''
                    }

                    container('jnlp') {
                        git branch: 'master',
                                credentialsId: 'sandeep.zachariah.ssh',
                                url: 'git@orahub.oraclecorp.com:fmw-platform-qa/fmw-k8s-pipeline.git'

                        sh label: 'create nfs folder', script: '''
                        export KUBECONFIG=${KUBECONFIG}
                        
                        cd kubernetes/framework
                        sed -i "s#%FMWK8S_NFS_HOME%#${FMWK8S_NFS_HOME}#g" fmwk8s-mkdir-pod.yaml
                        sed -i "s#%NFS_DOMAIN_DIR%#${NFS_DOMAIN_DIR}#g" fmwk8s-mkdir-pod.yaml
                        cat fmwk8s-mkdir-pod.yaml
                        
                        kubectl apply -f fmwk8s-mkdir-pod.yaml -n ${SOA_DOMAIN_NS}
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            container(name: 'jnlp') {
                script {
                    Operator.cleanOperator this, "${SOA_OPERATOR_REL}"

                    Domain.cleanDomain this, "${SOA_DOMAIN_NAME}", "${SOA_DOMAIN_NS}"
                    Domain.cleanDomainNamespace this, "${SOA_DOMAIN_NS}"

                    Operator.cleanOperator this, "${SOA_OPERATOR_REL}"
                    Operator.cleanOperatorNamespace this, "${SOA_OPERATOR_NS}"
                }
            }
        }
    }
}
