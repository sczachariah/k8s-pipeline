@Library('fmwk8s-pipeline-library') _


import com.oracle.fmwk8s.common.EnvironmentSetup
import com.oracle.fmwk8s.env.Domain
import com.oracle.fmwk8s.env.IngressController
import com.oracle.fmwk8s.env.Operator
import com.oracle.fmwk8s.common.Initializer

pipeline {
    agent {
        kubernetes {
            cloud "${CLOUD}"
            namespace 'fmwk8s'
            yamlFile "framework/podtemplate/fmwk8s-slave.yaml"
        }
    }


    stages {
        stage('cleanup namespace') {
            steps {
                container('jnlp') {
                    script {
                        log('INFO', 'Cleaning namespaces for ' + "${DOMAIN_NAME}" + ' with unique runId ' + "${RUN_SUFFIX}")
                        Initializer.initializeCleanupParameterValues(this)
                    }
                }
            }
        }
    }

    post {
        always {
            container(name: 'jnlp') {
                script {
                    Operator.cleanOperator()

                    IngressController.undeployLoadBalancer()
                    Domain.cleanDomain()
                    EnvironmentSetup.deleteNfsFolder()
                    Domain.cleanDomainNamespace()

                    Operator.cleanOperator()
                    Operator.cleanOperatorNamespace()
                }
            }
        }
    }
}
